(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{363:function(a,t,s){"use strict";s.r(t);var e=s(7),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"mybatis获取参数值的两种方式-重点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mybatis获取参数值的两种方式-重点"}},[a._v("#")]),a._v(" MyBatis获取参数值的两种方式（重点）")]),a._v(" "),t("ul",[t("li",[a._v("MyBatis获取参数值的两种方式：${}和#{}")]),a._v(" "),t("li",[a._v("${}的本质就是字符串拼接，#{}的本质就是占位符赋值")]),a._v(" "),t("li",[a._v("${}使用字符串拼接的方式拼接sql，若为字符串类型或日期类型的字段进行赋值时，要手动加单引号；但是#{}使用占位符赋值的方式拼接sql，此时为字符串类型或日期类型的字段进行赋值时，可以自动添加单引号")])]),a._v(" "),t("p",[a._v("**注意：**字符串拼接会出现sql注入的问题，不够安全，所以我们能用#{}获取参数的情况最好不要用${}获取参数")]),a._v(" "),t("h2",{attrs:{id:"_1、单个字面量类型的参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、单个字面量类型的参数"}},[a._v("#")]),a._v(" 1、单个字面量类型的参数")]),a._v(" "),t("p",[a._v("若mapper接口中的方法参数为单个的字面量类型，此时可以使用${}和#{}以任意的名称（最好见名识意）获取参数的值，注意${}需要手动加单引号")]),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--findUserByUsername--\x3e")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("select")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("findUserByUsername"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("resultType")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--select * from t_user where username = #{saf}--\x3e")]),a._v("\n    select * from t_user where username = '${saf}'\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("select")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("h2",{attrs:{id:"_2、多个字面量类型的参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、多个字面量类型的参数"}},[a._v("#")]),a._v(" 2、多个字面量类型的参数")]),a._v(" "),t("p",[a._v("若mapper接口中的方法参数为多个时，此时MyBatis会自动将这些参数放在一个map集合中，以以下两种方式进行存储")]),a._v(" "),t("ul",[t("li",[a._v("以arg0,arg1…为键，以参数为值；")]),a._v(" "),t("li",[a._v("以param1,param2…为键，以参数为值；")])]),a._v(" "),t("p",[a._v("因此只需要通过${}和#{}访问map集合的键就可以获取相对应的值，注意${}需要手动加单引号。")]),a._v(" "),t("p",[a._v("使用arg或者param都行，要注意的是，arg是从arg0开始的，param是从param1开始的，甚至你混搭也是不会有任何问题的例如"),t("code",[a._v("select * from t_user where username = #{param1} and password = #{arg1}")])]),a._v(" "),t("hr"),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--checkLogin(String username, String password)--\x3e")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("select")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("checkLogin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("resultType")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--select * from t_user where username = #{arg0} and password = #{arg1}--\x3e")]),a._v("\n    select * from t_user where username = '${param1}' and password = '${param2}'\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("select")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("h2",{attrs:{id:"_3、map集合类型的参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、map集合类型的参数"}},[a._v("#")]),a._v(" 3、map集合类型的参数")]),a._v(" "),t("p",[a._v("mapper接口方法的参数有多个时，可手动将这些参数放在一个map集合中存储")]),a._v(" "),t("p",[a._v("只需要通过${}和#{}访问map集合的键就可以获取相对应的值，注意${}需要手动加单引号。")]),a._v(" "),t("hr"),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--checkLoginByMap(Map<String,Object> map)--\x3e")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("select")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("checkLoginByMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("resultType")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    select * from t_user where username = #{username} and password = #{password}\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--select * from t_user where username = '${param1}' and password = '${param2}'--\x3e")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("select")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("h2",{attrs:{id:"_4、实体类型的参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、实体类型的参数"}},[a._v("#")]),a._v(" 4、实体类型的参数")]),a._v(" "),t("p",[a._v("若mapper接口方法的参数为实体类时")]),a._v(" "),t("p",[a._v("只需要通过${}和#{}访问map集合的键就可以获取相对应的值，注意${}需要手动加单引号。")]),a._v(" "),t("hr"),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--insertUser(User user)--\x3e")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("insert")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("insertUser"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    insert into t_user values (null ,#{username},#{password},#{age},#{sex},#{email})\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("insert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("h2",{attrs:{id:"_5、使用-param注解命名参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、使用-param注解命名参数"}},[a._v("#")]),a._v(" 5、使用@Param注解命名参数")]),a._v(" "),t("p",[a._v("若mapper接口中的方法参数使用@Param注解命名参数时，此时MyBatis会自动将这些参数放在一个map集合中，以以下两种方式进行存储")]),a._v(" "),t("ul",[t("li",[a._v("以@Param注解的值为键，以参数为值；")]),a._v(" "),t("li",[a._v("以param1,param2…为键，以参数为值；")])]),a._v(" "),t("p",[a._v("因此只需要通过${}和#{}访问map集合的键就可以获取相对应的值，注意${}需要手动加单引号。")]),a._v(" "),t("hr"),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('\x3c!--checkLoginByParam(@Param("username") String username,@Param("password") String password)--\x3e')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("select")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("checkLoginByParam"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("resultType")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    select * from t_user where username = #{username} and password = #{password}\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("\x3c!--select * from t_user where username = '${param1}' and password = '${param2}'--\x3e")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("select")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("h2",{attrs:{id:"_6、总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、总结"}},[a._v("#")]),a._v(" 6、总结")]),a._v(" "),t("p",[a._v("以上五种方式可总结为以下两种情况")]),a._v(" "),t("ul",[t("li",[a._v("有实体类")]),a._v(" "),t("li",[a._v("无实体类")])]),a._v(" "),t("p",[a._v("有实体类直接用第4中方法")]),a._v(" "),t("p",[a._v("无实体类可以统一用@Param注解实现")])])}),[],!1,null,null,null);t.default=r.exports}}]);